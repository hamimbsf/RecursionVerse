// ЁЯФ░ Basics of Function in JavaScript

// ЁЯУЪ Stack Memory тАФ Concept in Bangla

// Stack ржПржХржЯрж┐ **LIFO (Last In, First Out)** ржзрж░ржирзЗрж░ ржбрзЗржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ред ржПрж░ ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ тАФ ржпрзЗржЯрж╛ **рж╕рж░рзНржмрж╢рзЗрж╖рзЗ ржврзЛржХрзЗ**, рж╕рзЗржЯрж╛ **рж╕ржмрж╛рж░ ржЖржЧрзЗ ржмрзЗрж░ рж╣рзЯ**ред

// ЁЯФ╝ Push Operation
// ржпржЦржи ржЖржорж░рж╛ Stack ржорзЗржорзЛрж░рж┐рждрзЗ ржирждрзБржи ржХрзЛржирзЛ ржЙржкрж╛ржжрж╛ржи **ржпрзЛржЧ ржХрж░рж┐**, рж╕рзЗржЗ ржХрж╛ржЬржЯрж┐ржХрзЗ **Push** ржмрж▓рж╛ рж╣ржпрж╝ред

// ЁЯФ╜ Pop Operation
// ржпржЦржи ржЖржорж░рж╛ Stack ржерзЗржХрзЗ рж╕рж░рзНржмрж╢рзЗрж╖ ржЙржкрж╛ржжрж╛ржиржЯрж┐ рж╕рж░рж┐рзЯрзЗ ржлрзЗрж▓рж┐, рждржЦржи рж╕рзЗржЯрж╛ Pop ржЕржкрж╛рж░рзЗрж╢ржи ржирж╛ржорзЗ ржкрж░рж┐ржЪрж┐рждред

// ЁЯСА Peek Operation
// Stack-ржПрж░ рж╕рж░рзНржмрж╢рзЗрж╖рзЗ ржпрзЛржЧ ржХрж░рж╛ (рж╕ржмрж╛рж░ ржЙржкрж░рзЗрж░) ржЙржкрж╛ржжрж╛ржиржЯрж┐ ржжрзЗржЦрждрзЗ ржЪрж╛ржЗрж▓рзЗ ржЖржорж░рж╛ Peek ржЕржкрж╛рж░рзЗрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред ржПржЯрж╛ рж╢рзБржзрзБ ржЙржкрж╛ржжрж╛ржиржЯрж┐ ржжрзЗржЦрж╛рзЯ, ржХрж┐ржирзНрждрзБ рж╕рж░рж╛рзЯ ржирж╛ред

// Stack ржорзЗржорзЛрж░рж┐рждрзЗ ржпрждржЧрзБрж▓рзЛ ржПрж▓рж┐ржорзЗржирзНржЯ ржерж╛ржХрзЗ, рж╕рзЗржЧрзБрж▓рзЛ ржЖрж╕рж▓рзЗ function callред ржПржЬржирзНржп ржПржЗ Stack-ржХрзЗ ржЖржорж░рж╛ Call Stack ржмрж▓рж┐ред Recursion-ржПрж░ рж╕ржорзЯ ржкрзНрж░рждрж┐ржЯрж┐ function call ржПржХржЯрж╛рж░ ржкрж░ ржПржХржЯрж╛ Stack-ржП ржЬржорж╛ рж╣рзЯред

// greet();

// function greet() {
//   console.log("hello");
//   enjoy();
// }
// function enjoy() {
//   console.log("enjoy");
//   temp();
// }
// function temp() {
//   console.log("do something");
// }

// ЁЯФД Execution Steps with Call Stack:

// 1я╕ПтГг greet() ржХрж▓ рж╣рзЯ
// greet() Stack-ржП Push рж╣рзЯ

// ржПрж░ ржкрж░рзЗ Console рж╣ржпрж╝: "hello"

// 2я╕ПтГг enjoy() ржХрж▓ рж╣рзЯ greet() ржПрж░ ржнрж┐рждрж░рзЗ
// enjoy() Stack-ржП Push рж╣рзЯ

// ржПрж░ ржкрж░рзЗ Console рж╣ржпрж╝: "enjoy"

// 3я╕ПтГг temp() ржХрж▓ рж╣рзЯ enjoy() ржПрж░ ржнрж┐рждрж░рзЗ
// temp() Stack-ржП Push рж╣рзЯ

// ржПрж░ ржкрж░рзЗ Console рж╣ржпрж╝: "do something"

// push рж╣рждрзЗ рж╣рждрзЗ рж╕ржмрж╛рж░ ржЙржкрж░рзЗ ржпрзЗрж╣рзЗрждрзБ stack ржорзЗржорзЛрж░рж┐ ржПрж░ ржоржзрзНржпрзЗ temp() ржЫрж┐рж▓рзЛ рж╕рзЗржЯрж╛ рж╕ржмрж╛рж░ ржЖржЧрзЗ pop() рж╣ржпрж╝ ржПрж░ржкрж░ enjoy() рждрж╛рж░ржкрж░рзЗ greet() pop() рж╣ржпрж╝рзЗ stack ржорзЗржорзЛрж░рж┐ ржЦрж╛рж▓рж┐ рж╣рзЯ

// ЁЯза More About Stack Memory:

// Stack memory-рждрзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ function ржиржпрж╝,
// ржмрж░ржВ function-ржПрж░ ржнрж┐рждрж░рзЗрж░ Execution Context ржПржмржВ primitive values ржЧрзБрж▓рзЛржУ store рж╣ржпрж╝ред

// ржкрзНрж░рждрзНржпрзЗржХржЯрж┐ function call-ржПрж░ ржЬржирзНржп Stack ржП ржПржХржЯрж┐ ржЖрж▓рж╛ржжрж╛ Execution Context рждрзИрж░рж┐ рж╣ржпрж╝,
// ржпрзЗржЦрж╛ржирзЗ рж╕рзЗржЗ function-ржПрж░ declaration, execution steps ржПржмржВ scope рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп ржерж╛ржХрзЗред

// ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржВрж╢ржи call рж╣рж▓рзЗ Stack-ржП ржПржХржЯрж┐ ржирждрзБржи ржЬрж╛рзЯржЧрж╛ рждрзИрж░рж┐ рж╣ржпрж╝ (ржпрж╛ржХрзЗ Execution Context ржмрж╛ Stack Frame ржмрж▓рж╛ рж╣ржпрж╝),
// ржпрзЗржЦрж╛ржирзЗ function-ржПрж░ execution ржкрж░рж┐ржЪрж╛рж▓рж┐ржд рж╣ржпрж╝ред

// ЁЯЧВя╕П Heap Memory:
// Heap рж╣ржЪрзНржЫрзЗ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзЗрж░ ржЬржирзНржп ржмрж░рж╛ржжрзНржжржХрзГржд ржПржХржЯрж┐ ржмржбрж╝ ржУ structure-less memory area,
// ржпрзЗржЦрж╛ржирзЗ reference type data (ржпрзЗржоржи: object, array, function) store ржХрж░рж╛ рж╣ржпрж╝ред

// ржпржЦржи рждрзБржорж┐ ржХрзЛржирзЛ object, array ржмрж╛ function рждрзИрж░рж┐ ржХрж░рзЛ тАФ JavaScript рж╕рзЗржЗ reference type data ржЧрзБрж▓рзЛржХрзЗ Heap-ржП рж░рж╛ржЦрзЗред
// ржЖрж░ Stack ржерзЗржХрзЗ рж╢рзБржзрзБ рж╕рзЗржЗ Heap-ржПрж░ reference (pointer) store рж╣ржпрж╝ред

// тЬЕ Note:
// function ржирж┐ржЬрзЗ reference type рж╣рж▓рзЗржУ,
// ржпржЦржи ржХрж▓ ржХрж░рж╛ рж╣ржпрж╝ рждржЦржи рждрж╛рж░ Execution Context Stack-ржП ржпрж╛ржпрж╝,
// ржЖрж░ рждрж╛рж░ actual definition (ржпржжрж┐ ржХрзЛржирзЛ variable/const ржП рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗ) рждржЦржиржУ Heap-ржП ржерж╛ржХрзЗред
// ЁЯУШ What is return ? -->

// тЬЕ return ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржерж╛ржорж╛рждрзЗ ржкрж╛рж░рж┐
// тЬЕ return ржжрж┐рзЯрзЗ ржЪрж╛ржЗрж▓рзЗ ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ ржХрзЛржирзЛ ржорж╛ржи (value) ржкрж╛ржарж╛ржирзЛ ржпрж╛рзЯ

// ЁЯУМ ржорзВрж▓ржд return ржПрж░ ржжрзБржЯрж┐ ржХрж╛ржЬ:
// 1я╕ПтГг ржлрж╛ржВрж╢ржиржХрзЗ ржЗржорж┐ржбрж┐рзЯрзЗржЯрж▓рж┐ ржмржирзНржз (terminate) ржХрж░рж╛
// 2я╕ПтГг ржХрзЛржирзЛ ржорж╛ржи (value) ржХрзЗ ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж╛

// тЬи ржЙржжрж╛рж╣рж░ржг рзз: рж╢рзБржзрзБржорж╛рждрзНрж░ ржлрж╛ржВрж╢ржи ржерж╛ржорж╛ржирзЛ
function temp(val) {
  if (val === 0) return; // ржпржжрж┐ val = 0 рж╣рзЯ, рждрж╛рж╣рж▓рзЗ ржлрж╛ржВрж╢ржи ржПржЦрж╛ржирзЗржЗ ржерзЗржорзЗ ржпрж╛ржмрзЗ
  console.log("If the val is not 0 you can see this");
}

temp(0); // output: (ржХрж┐ржЫрзБржЗ ржирж╛, ржХрж╛рж░ржг ржлрж╛ржВрж╢ржи return ржжрж┐рзЯрзЗ ржерзЗржорзЗ ржЧрзЗржЫрзЗ)
temp(10); // output: If the val is not 0 you can see this

// тЬи ржЙржжрж╛рж╣рж░ржг рзи: ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ ржорж╛ржи ржкрж╛ржарж╛ржирзЛ (return value)
function square(num) {
  return num * num; // num ржПрж░ ржШрж░ржлрж▓ (square) рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЗ
}

const result = square(5);
console.log(result); // output: 25

// тЬи ржЙржжрж╛рж╣рж░ржг рзй: return ржПрж░ ржкрж░рзЗ ржЖрж░ ржХрзЛржирзЛ ржХрзЛржб ржЪрж▓ржмрзЗ ржирж╛
function demo() {
  return "Done";
  console.log("This will never run"); // ржПржЗ рж▓рж╛ржЗржи ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯржЗ рж╣ржмрзЗ ржирж╛
}

console.log(demo()); // output: Done

// тЬи ржЙржжрж╛рж╣рж░ржг рзк: return ржирж╛ ржжрж┐рж▓рзЗ ржлрж╛ржВрж╢ржирзЗрж░ default рж░рж┐ржЯрж╛рж░рзНржи ржнрзНржпрж╛рж▓рзБ рж╣рзЯ undefined
function sayHi() {
  console.log("Hi there!");
}

const msg = sayHi(); // ржПржЦрж╛ржирзЗ ржлрж╛ржВрж╢ржи ржХрж┐ржЫрзБ return ржХрж░рзЗржирж┐
console.log(msg); // output: undefined
